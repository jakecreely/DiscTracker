name: Deploy to AWS

on:
  push:
    branches: [ "main", "feature/deployment-pipeline" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to AWS ECR
        id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Django Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
          ECR_REPOSITORY: disc_tracker
          IMAGE_TAG: django-latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f DiscTracker/Dockerfile DiscTracker/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push Nginx Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
          ECR_REPOSITORY: disc_tracker
          IMAGE_TAG: nginx-latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f DiscTracker/nginx/Dockerfile DiscTracker/nginx/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#   deploy-infra:
#     needs: build-and-push
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.3.0

#       - name: Initialize Terraform
#         run: terraform init

#       - name: Terraform Plan
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         run: terraform apply -auto-approve tfplan
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION }}
