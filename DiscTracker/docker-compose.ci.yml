
services:
  app:
    image: ${DOCKER_IMAGE}
    container_name: disc-tracker_app
    restart: always
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      REDIS_URL: ${REDIS_URL}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  db:
    image: postgres:13
    container_name: disc-tracker_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  redis:
    container_name: disc-tracker_redis
    restart: always
    image: redis:latest
    ports:
      - '6379:6379' 

  test:
    image: ${DOCKER_IMAGE}
    container_name: disc-tracker_tests
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      REDIS_URL: ${REDIS_URL}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    depends_on:
      - app
      - db
      - nginx
    command: ["/bin/sh", "-c", "/app/scripts/wait-for-it.sh db:5432 -- && pytest /app/tests/integration"]
    volumes:
      - .:/app
    restart: "no"