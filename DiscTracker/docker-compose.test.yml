
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: disc-tracker_app
    restart: always
    env_file:
      - .env.test
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  db:
    image: postgres:13
    container_name: disc-tracker_db
    restart: always
    env_file:
      - .env.test
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  redis:
    container_name: disc-tracker_redis
    restart: always
    image: redis:latest
    ports:
      - '6379:6379' 

  celery:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: disc-tracker_celery
    restart: always
    env_file:
      - .env.test
    command: celery -A disctracker worker --loglevel=info
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: disc-tracker_nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - app

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: disc-tracker_tests
    env_file:
      - .env.test
    depends_on:
      - app
      - db
      - redis
      - celery
      - nginx
    command: ["/bin/sh", "-c", "/app/scripts/wait-for-it.sh db:5432 -- && pytest"]
    volumes:
      - .:/app
    restart: "no"

