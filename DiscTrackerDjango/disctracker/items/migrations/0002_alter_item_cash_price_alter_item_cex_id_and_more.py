# Generated by Django 5.1.5 on 2025-02-06 22:08

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.AlterField(
            model_name='item',
            name='cash_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Cash Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Cash Price must be less than or equal to 3000')]),
        ),
        migrations.AlterField(
            model_name='item',
            name='cex_id',
            field=models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', 'ID must be alphanumeric characters')]),
        ),
        migrations.AlterField(
            model_name='item',
            name='exchange_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Exchange Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Exchange Price must be less than or equal to 3000')]),
        ),
        migrations.AlterField(
            model_name='item',
            name='last_checked',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AlterField(
            model_name='item',
            name='sell_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Sell Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Sell Price must be less than or equal to 3000')]),
        ),
        migrations.AlterField(
            model_name='pricehistory',
            name='cash_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Cash Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Cash Price must be less than or equal to 3000')]),
        ),
        migrations.AlterField(
            model_name='pricehistory',
            name='date_checked',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AlterField(
            model_name='pricehistory',
            name='exchange_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Exchange Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Exchange Price must be less than or equal to 3000')]),
        ),
        migrations.AlterField(
            model_name='pricehistory',
            name='sell_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Sell Price must be greater or equal to 0'), django.core.validators.MaxValueValidator(3000, 'Sell Price must be less than or equal to 3000')]),
        ),
    ]
